{"ast":null,"code":"var _jsxFileName = \"/Users/superchoby/Desktop/presentation-timer/src/components/PracticeScript.js\";\nimport React from 'react';\nimport './PracticeScript.css';\nimport Stopwatch from './Stopwatch';\n\nclass PracticeScript extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.highlight = e => {\n      document.getElementById('paragraph').className += \" highlight\";\n\n      if (this.createNewWatch) {\n        this.watch = React.createElement(Stopwatch, {\n          go: true,\n          totalMinutes: this.props.totalMinutes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        });\n        this.forceUpdate();\n        this.createNewWatch = false;\n        console.log('hi');\n      }\n    };\n\n    this.highlight = this.highlight.bind(this);\n    this.watch = React.createElement(Stopwatch, {\n      go: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    });\n    this.createNewWatch = true;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"paragraph\",\n      className: \"script\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.script)), React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.highlight,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Start\"), this.watch);\n  }\n\n}\n\nexport default PracticeScript;","map":{"version":3,"sources":["/Users/superchoby/Desktop/presentation-timer/src/components/PracticeScript.js"],"names":["React","Stopwatch","PracticeScript","Component","constructor","props","highlight","e","document","getElementById","className","createNewWatch","watch","totalMinutes","forceUpdate","console","log","bind","render","script"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,SAPkB,GAONC,CAAC,IAAI;AACbC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,IAAkD,YAAlD;;AACA,UAAG,KAAKC,cAAR,EAAuB;AACnB,aAAKC,KAAL,GAAa,oBAAC,SAAD;AAAW,UAAA,EAAE,EAAE,IAAf;AAAqB,UAAA,YAAY,EAAE,KAAKP,KAAL,CAAWQ,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACA,aAAKC,WAAL;AACA,aAAKH,cAAL,GAAsB,KAAtB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;AAEJ,KAhBiB;;AAEd,SAAKV,SAAL,GAAiB,KAAKA,SAAL,CAAeW,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKL,KAAL,GAAa,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AACA,SAAKD,cAAL,GAAsB,IAAtB;AACH;;AAaDO,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,EAAE,EAAC,WAAN;AAAkB,MAAA,SAAS,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,KAAKb,KAAL,CAAWc,MAAjD,CADJ,CADJ,EAII;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,KAAKb,SAAzC;AAAoD,MAAA,IAAI,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKK,KAAKM,KALV,CADJ;AASH;;AA7BwC;;AAgC7C,eAAeV,cAAf","sourcesContent":["import React from 'react';\nimport './PracticeScript.css';\nimport Stopwatch from './Stopwatch';\n\nclass PracticeScript extends React.Component {\n    constructor(props){\n        super(props);\n        this.highlight = this.highlight.bind(this);\n        this.watch = <Stopwatch go={false} />\n        this.createNewWatch = true;\n    }\n\n    highlight = e => {\n        document.getElementById('paragraph').className += \" highlight\";\n        if(this.createNewWatch){\n            this.watch = <Stopwatch go={true} totalMinutes={this.props.totalMinutes} />\n            this.forceUpdate();\n            this.createNewWatch = false;\n            console.log('hi');\n        }\n        \n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <div className=\"text-container\">\n                    <p id='paragraph' className='script'>{this.props.script}</p>\n                </div>\n                <button className='button' onClick={this.highlight} type='button'>Start</button>\n                {this.watch}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PracticeScript;"]},"metadata":{},"sourceType":"module"}