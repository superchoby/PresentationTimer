{"ast":null,"code":"var _jsxFileName = \"/Users/superchoby/Desktop/presentation-timer/src/components/PracticeScript.js\";\nimport React from 'react';\nimport './PracticeScript.css';\nimport Stopwatch from './Stopwatch';\n\nclass PracticeScript extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.highlight = e => {\n      document.getElementById('paragraph').style.transition = this.totalTime.toString() + 's linear';\n      document.getElementById('paragraph').className += \" highlight\";\n      this.watch = React.createElement(Stopwatch, {\n        className: \"time\",\n        totalMinutes: this.props.totalMinutes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n      let minutesPropString = this.props.totalMinutes.toString();\n      this.showTime = minutesPropString.slice(-1) === '5' ? React.createElement(\"p\", {\n        className: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, minutesPropString.substr(0, minutesPropString.indexOf('.')) + ':30') : React.createElement(\"p\", {\n        className: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, minutesPropString, \":00\");\n      this.forceUpdate();\n      document.getElementById('button').style.display = 'none';\n    };\n\n    this.highlight = this.highlight.bind(this);\n    this.watch = React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    });\n    this.totalTime = this.props.totalMinutes * 60;\n    this.showTime = React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"paragraph\",\n      className: \"script\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.script)), React.createElement(\"button\", {\n      id: \"button\",\n      className: \"button pure-button\",\n      onClick: this.highlight,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Start\"), React.createElement(\"div\", {\n      className: \"timer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.watch, this.showTime));\n  }\n\n}\n\nexport default PracticeScript;","map":{"version":3,"sources":["/Users/superchoby/Desktop/presentation-timer/src/components/PracticeScript.js"],"names":["React","Stopwatch","PracticeScript","Component","constructor","props","highlight","e","document","getElementById","style","transition","totalTime","toString","className","watch","totalMinutes","minutesPropString","showTime","slice","substr","indexOf","forceUpdate","display","bind","render","script"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,SARkB,GAQNC,CAAC,IAAI;AACbC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,UAA3C,GAAwD,KAAKC,SAAL,CAAeC,QAAf,KAA4B,UAApF;AACAL,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCK,SAArC,IAAkD,YAAlD;AACA,WAAKC,KAAL,GAAa,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAA4B,QAAA,YAAY,EAAE,KAAKV,KAAL,CAAWW,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;AACA,UAAIC,iBAAiB,GAAG,KAAKZ,KAAL,CAAWW,YAAX,CAAwBH,QAAxB,EAAxB;AACA,WAAKK,QAAL,GAAgBD,iBAAiB,CAACE,KAAlB,CAAwB,CAAC,CAAzB,MAAgC,GAAhC,GAAsC;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBF,iBAAiB,CAACG,MAAlB,CAAyB,CAAzB,EAA4BH,iBAAiB,CAACI,OAAlB,CAA0B,GAA1B,CAA5B,IAA4D,KAAjF,CAAtC,GAAmI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBJ,iBAArB,QAAnJ;AACA,WAAKK,WAAL;AACAd,MAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCa,OAAxC,GAAkD,MAAlD;AACH,KAhBiB;;AAEd,SAAKjB,SAAL,GAAiB,KAAKA,SAAL,CAAekB,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKT,KAAL,GAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AACA,SAAKH,SAAL,GAAiB,KAAKP,KAAL,CAAWW,YAAX,GAA0B,EAA3C;AACA,SAAKE,QAAL,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AACH;;AAYDO,EAAAA,MAAM,GAAG;AAEL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,EAAE,EAAC,WAAN;AAAkB,MAAA,SAAS,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,KAAKpB,KAAL,CAAWqB,MAAjD,CADJ,CADJ,EAII;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,SAAS,EAAC,oBAA9B;AAAmD,MAAA,OAAO,EAAE,KAAKpB,SAAjE;AAA4E,MAAA,IAAI,EAAC,QAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKS,KADV,EAEK,KAAKG,QAFV,CALJ,CADJ;AAYH;;AAjCwC;;AAoC7C,eAAehB,cAAf","sourcesContent":["import React from 'react';\nimport './PracticeScript.css';\nimport Stopwatch from './Stopwatch';\n\nclass PracticeScript extends React.Component {\n    constructor(props){\n        super(props);\n        this.highlight = this.highlight.bind(this);\n        this.watch = <br />;\n        this.totalTime = this.props.totalMinutes * 60;\n        this.showTime = <br />\n    }\n\n    highlight = e => {\n        document.getElementById('paragraph').style.transition = this.totalTime.toString() + 's linear';\n        document.getElementById('paragraph').className += \" highlight\";\n        this.watch = <Stopwatch className='time' totalMinutes={this.props.totalMinutes}/>\n        let minutesPropString = this.props.totalMinutes.toString()\n        this.showTime = minutesPropString.slice(-1) === '5' ? <p className='time'>{minutesPropString.substr(0, minutesPropString.indexOf('.'))+':30'}</p>: <p className='time'>{minutesPropString}:00</p>;\n        this.forceUpdate();\n        document.getElementById('button').style.display = 'none';\n    }\n\n    render() {\n        \n        return(\n            <React.Fragment>\n                <div className=\"text-container\">\n                    <p id='paragraph' className='script'>{this.props.script}</p>\n                </div>\n                <button id='button' className='button pure-button' onClick={this.highlight} type='button'>Start</button>\n                <div className='timer-container'>\n                    {this.watch}\n                    {this.showTime}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PracticeScript;"]},"metadata":{},"sourceType":"module"}