{"ast":null,"code":"var _jsxFileName = \"/Users/superchoby/Desktop/presentation-timer/src/components/PracticeScript.js\";\nimport React from 'react';\nimport './PracticeScript.css';\nimport Stopwatch from './Stopwatch';\n\nclass PracticeScript extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.countTime = () => {\n      if (this.state.seconds === 59) {\n        this.setState({\n          minutes: this.state.minutes + 1,\n          seconds: -1\n        });\n      }\n\n      this.setState({\n        seconds: this.state.seconds + 1\n      }); // console.log(this.state.seconds);\n\n      if (this.state.minutes === this.props.totalMinutes) {\n        return;\n      }\n    };\n\n    this.highlight = e => {\n      document.getElementById('paragraph').className += \" highlight\";\n      this.watch = React.createElement(Stopwatch, {\n        go: true,\n        totalMinutes: this.props.totalMinutes,\n        countTime: this.countTime(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n      this.forceUpdate();\n      this.createNewWatch = false;\n    };\n\n    this.highlight = this.highlight.bind(this);\n    this.watch = React.createElement(Stopwatch, {\n      go: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    });\n    this.createNewWatch = true;\n    this.countTime = this.countTime.bind(this);\n    this.state = {\n      minutes: 0,\n      seconds: 0\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"paragraph\",\n      className: \"script\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.script)), React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.highlight,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Start\"), this.watch);\n  }\n\n}\n\nexport default PracticeScript;","map":{"version":3,"sources":["/Users/superchoby/Desktop/presentation-timer/src/components/PracticeScript.js"],"names":["React","Stopwatch","PracticeScript","Component","constructor","props","countTime","state","seconds","setState","minutes","totalMinutes","highlight","e","document","getElementById","className","watch","forceUpdate","createNewWatch","bind","render","script"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAWlBC,SAXkB,GAWN,MAAM;AACd,UAAG,KAAKC,KAAL,CAAWC,OAAX,KAAuB,EAA1B,EAA6B;AACzB,aAAKC,QAAL,CAAc;AAACC,UAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,OAAX,GAAqB,CAA/B;AAAkCF,UAAAA,OAAO,EAAE,CAAC;AAA5C,SAAd;AACH;;AACD,WAAKC,QAAL,CAAc;AAACD,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AAA/B,OAAd,EAJc,CAKd;;AACA,UAAG,KAAKD,KAAL,CAAWG,OAAX,KAAuB,KAAKL,KAAL,CAAWM,YAArC,EAAkD;AAC9C;AACH;AACJ,KApBiB;;AAAA,SAsBlBC,SAtBkB,GAsBNC,CAAC,IAAI;AACbC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,IAAkD,YAAlD;AACA,WAAKC,KAAL,GAAa,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAE,IAAf;AAAqB,QAAA,YAAY,EAAE,KAAKZ,KAAL,CAAWM,YAA9C;AAA4D,QAAA,SAAS,EAAE,KAAKL,SAAL,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;AACA,WAAKY,WAAL;AACA,WAAKC,cAAL,GAAsB,KAAtB;AACH,KA3BiB;;AAEd,SAAKP,SAAL,GAAiB,KAAKA,SAAL,CAAeQ,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKH,KAAL,GAAa,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AACA,SAAKE,cAAL,GAAsB,IAAtB;AACA,SAAKb,SAAL,GAAiB,KAAKA,SAAL,CAAec,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKb,KAAL,GAAa;AAACG,MAAAA,OAAO,EAAE,CAAV;AACTF,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAoBDa,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,EAAE,EAAC,WAAN;AAAkB,MAAA,SAAS,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,KAAKhB,KAAL,CAAWiB,MAAjD,CADJ,CADJ,EAII;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,KAAKV,SAAzC;AAAoD,MAAA,IAAI,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKK,KAAKK,KALV,CADJ;AASH;;AAxCwC;;AA2C7C,eAAef,cAAf","sourcesContent":["import React from 'react';\nimport './PracticeScript.css';\nimport Stopwatch from './Stopwatch';\n\nclass PracticeScript extends React.Component {\n    constructor(props){\n        super(props);\n        this.highlight = this.highlight.bind(this);\n        this.watch = <Stopwatch go={false} />\n        this.createNewWatch = true;\n        this.countTime = this.countTime.bind(this);\n        this.state = {minutes: 0, \n            seconds: 0,\n            };\n    }\n\n    countTime = () => {\n        if(this.state.seconds === 59){\n            this.setState({minutes: this.state.minutes + 1, seconds: -1});\n        }\n        this.setState({seconds: this.state.seconds + 1})\n        // console.log(this.state.seconds);\n        if(this.state.minutes === this.props.totalMinutes){\n            return;\n        }\n    }\n\n    highlight = e => {\n        document.getElementById('paragraph').className += \" highlight\";\n        this.watch = <Stopwatch go={true} totalMinutes={this.props.totalMinutes} countTime={this.countTime()}/>\n        this.forceUpdate();\n        this.createNewWatch = false;\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <div className=\"text-container\">\n                    <p id='paragraph' className='script'>{this.props.script}</p>\n                </div>\n                <button className='button' onClick={this.highlight} type='button'>Start</button>\n                {this.watch}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PracticeScript;"]},"metadata":{},"sourceType":"module"}