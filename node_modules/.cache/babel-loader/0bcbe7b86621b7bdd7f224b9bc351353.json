{"ast":null,"code":"var _jsxFileName = \"/Users/superchoby/Desktop/presentation-timer/src/components/PracticeScript.js\";\nimport React from 'react';\nimport './PracticeScript.css';\nimport Stopwatch from './Stopwatch';\n\nclass PracticeScript extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.highlight = e => {\n      document.getElementById('paragraph').className += \" highlight\";\n      this.watch = React.createElement(Stopwatch, {\n        totalMinutes: this.props.totalMinutes,\n        countTime: this.countTime(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n      this.forceUpdate();\n      this.createNewWatch = false;\n    };\n\n    this.highlight = this.highlight.bind(this);\n    this.watch = {};\n    this.createNewWatch = true;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"paragraph\",\n      className: \"script\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.props.script)), React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.highlight,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Start\"), this.watch);\n  }\n\n}\n\nexport default PracticeScript;","map":{"version":3,"sources":["/Users/superchoby/Desktop/presentation-timer/src/components/PracticeScript.js"],"names":["React","Stopwatch","PracticeScript","Component","constructor","props","highlight","e","document","getElementById","className","watch","totalMinutes","countTime","forceUpdate","createNewWatch","bind","render","script"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,SAPkB,GAONC,CAAC,IAAI;AACbC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,IAAkD,YAAlD;AACA,WAAKC,KAAL,GAAa,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKN,KAAL,CAAWO,YAApC;AAAkD,QAAA,SAAS,EAAE,KAAKC,SAAL,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;AACA,WAAKC,WAAL;AACA,WAAKC,cAAL,GAAsB,KAAtB;AACH,KAZiB;;AAEd,SAAKT,SAAL,GAAiB,KAAKA,SAAL,CAAeU,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKL,KAAL,GAAa,EAAb;AACA,SAAKI,cAAL,GAAsB,IAAtB;AACH;;AASDE,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,EAAE,EAAC,WAAN;AAAkB,MAAA,SAAS,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,KAAKZ,KAAL,CAAWa,MAAjD,CADJ,CADJ,EAII;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,KAAKZ,SAAzC;AAAoD,MAAA,IAAI,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKK,KAAKK,KALV,CADJ;AASH;;AAzBwC;;AA4B7C,eAAeT,cAAf","sourcesContent":["import React from 'react';\nimport './PracticeScript.css';\nimport Stopwatch from './Stopwatch';\n\nclass PracticeScript extends React.Component {\n    constructor(props){\n        super(props);\n        this.highlight = this.highlight.bind(this);\n        this.watch = {};\n        this.createNewWatch = true;\n    }\n\n    highlight = e => {\n        document.getElementById('paragraph').className += \" highlight\";\n        this.watch = <Stopwatch totalMinutes={this.props.totalMinutes} countTime={this.countTime()}/>\n        this.forceUpdate();\n        this.createNewWatch = false;\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <div className=\"text-container\">\n                    <p id='paragraph' className='script'>{this.props.script}</p>\n                </div>\n                <button className='button' onClick={this.highlight} type='button'>Start</button>\n                {this.watch}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PracticeScript;"]},"metadata":{},"sourceType":"module"}